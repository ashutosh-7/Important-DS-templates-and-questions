class Solution {
public:
    int dp[502][502];
    int solve(int i,int j,vector<int>& arr)
    {
        if(i>j)
            return 0;
        if(dp[i][j]!=-1)
            return dp[i][j];
        int ans=0;
        for(int k=i;k<=j;k++)
        {
            if(i-1<0)
            ans=max(ans,solve(i,k-1,arr)+solve(k+1,j,arr)+arr[k]*arr[j+1]);
            else
            ans=max(ans,solve(i,k-1,arr)+solve(k+1,j,arr)+arr[i-1]*arr[k]*arr[j+1]);
        }
        return dp[i][j]=ans;
    }
    int maxCoins(vector<int>& arr) {
            arr.push_back(1);
        memset(dp,-1,sizeof(dp));
        int n=arr.size()-2;
       // cout<<n<<endl;
        return solve(0,n,arr);
    }
};