/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;
    Node* next;

    Node() : val(0), left(NULL), right(NULL), next(NULL) {}

    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}

    Node(int _val, Node* _left, Node* _right, Node* _next)
        : val(_val), left(_left), right(_right), next(_next) {}
};
*/

class Solution {
public:
    Node* connect(Node* root) {
        
        Node* level=root;
        while(level!=NULL)
        {
            Node* currentLevel=level;
            while(currentLevel!=NULL)
            {
                if(currentLevel->left!=NULL)
                {
                    currentLevel->left->next=currentLevel->right;
                }
                if(currentLevel->right!=NULL and currentLevel->next!=NULL)
                {
                    currentLevel->right->next=currentLevel->next->left;
                }
                currentLevel=currentLevel->next;
            }
            level=level->left;
        }
        return root;
    }
};