class Solution {
public:
    int findTheCity(int n, vector<vector<int>>& edges, int distanceThreshold) {
        int dist[n][n];
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
                if(i==j)
                    dist[i][j]=0;
            else
                dist[i][j]=INT_MAX;
        }
        for(int i=0;i<edges.size();i++)
        {
            dist[edges[i][0]][edges[i][1]]=edges[i][2];
             dist[edges[i][1]][edges[i][0]]=edges[i][2];
        }
        
        for(int k=0;k<n;k++)  //intermedidiate vertex
        {
            for(int i=0;i<n;i++)
            {
                for(int j=0;j<n;j++)
                {
                    if(dist[i][k]!=INT_MAX and dist[k][j]!=INT_MAX)
                    dist[i][j]=min(dist[i][j],dist[i][k]+dist[k][j]);
                }
            }
        }
        
        int ans=0;
        int count=n;
        for(int i=0;i<n;i++)
        {
            int temp=0;
            for(int j=0;j<n;j++)
            {
                if(dist[i][j]<=distanceThreshold and i!=j)
                    temp+=1;
            }
            if(temp<=count){
                ans=i;
                count=temp;
            }
        }
        return ans;
        
    }
};