/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

class Solution {
public:
   
    void solve(TreeNode* root)
    {
        if(root==NULL or (root->left==NULL and root->right==NULL))
            return ;
        if(root->left!=NULL)
        {
            solve(root->left); //left ko solve kar ke wse root ke right mai daalo
            TreeNode* temp= root->right;
            root->right=root->left;
            root->left=NULL;
            //ab right ko sahi position be daalo
            TreeNode* temp2=root->right;
            while(temp2->right!=NULL)
                temp2=temp2->right;
            temp2->right=temp;
        }
        //ab recur for right subtree
        solve(root->right);
    }
    
    void flatten(TreeNode* root) {
    
       solve(root);
    }
};